/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UIConsultorio.java
 *
 * Created on 16-nov-2008, 11:15:37
 */

package view;

import java.awt.Color;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.event.ActionListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;;

/**
 *
 * @author rupertus
 */
public class UIConsultorio extends javax.swing.JFrame {

    int dividerlocation;

    /** Creates new form UIConsultorio */
    public UIConsultorio() {
        initComponents();

        jToolBar1.setVisible(true);
        fecha.setFormats("dd-M-yyyy");
        dividerlocation = this.jSplitPane1.getDividerLocation();
    }

    public void agrisarlabelfecha(boolean b) {
        lblfecha.setEnabled(!b);
    }

    public void apuntarFilaAgenda(int i) {
        jTableAgenda.setRowSelectionInterval(i, i);
        Rectangle rect = jTableAgenda.getCellRect(i, 0, true);
        jTableAgenda.scrollRectToVisible(rect);

    }

    public void cambiarFiltroListener(ActionListener cambiarFiltroListener) {

        tipovista.addActionListener(cambiarFiltroListener);
    }

    public void cambiarFechaListener(ActionListener fechaListener) {

        fecha.addActionListener(fechaListener);
    }

    public String getBuscar() {

        return(buscar.getText().toUpperCase());
    }

    public int getFiltro() {

        return(tipovista.getSelectedIndex());
    }

    public int getTipoLista() {
        return(tipovista.getSelectedIndex());
    }

    public void resetVista() {

        jSplitPane1.setDividerLocation(dividerlocation);
        scrollUtil.getVerticalScrollBar().setValue(0);
    }

    public void salirListener(ActionListener al) {

        botonSalir.addActionListener(al);
    }

    public void crearAgendaListener(MouseListener al) {

        jTableAgenda.addMouseListener((MouseListener) al);
    }

    
    public int getItemElegido() {

        int row;
        Integer i;

        row = jTableAgenda.getSelectedRow();
        
        i = (Integer) jTableAgenda.getModel().getValueAt(row, 3);
        
        if(i==null) {
        
            i = -1;
        }
        
        return(i);
    }
    
    public int getItemElegido(int col) {

        int row;
        Integer i;

        row = jTableAgenda.getSelectedRow();
        
        i = (Integer) jTableAgenda.getModel().getValueAt(row, col);
        
        if(i==null) {
        
            i = -1;
        }
        
        return(i);
    }
    
    public int getItemElegido1() {

        int row;
        Integer i;

        row = jTableAgenda.getSelectedRow();
        
        i = (Integer) jTableAgenda.getModel().getValueAt(row, 3);
        
        if(i==null) {
        
            i = -1;
        }
        
        return(i);
    }

    public void setAnchoLista(int ancho) {
    
        jSplitPane1.setDividerLocation(ancho);
        dividerlocation = ancho;
    }


    public void setFontTablaAgenda(Font f) {
        this.jTableAgenda.setFont(f);
    }

    public void setImprimirListener(ActionListener imprimirListener) {
        imprimir.addActionListener(imprimirListener);
    }

    public void setModelListaConsultas(DefaultTableModel dftm) {
        jTableAgenda.setModel(dftm);
    }

    public void setPacienteElegido(int pacienteElegido) {

        if(pacienteElegido < jTableAgenda.getRowCount()) {
            jTableAgenda .setRowSelectionInterval(pacienteElegido, pacienteElegido);
        }
    }

    public void setPanelUtil(JPanel unPanel) {
        scrollUtil.setViewportView(unPanel);
    }

    public void setTipoVistaModel(DefaultComboBoxModel cbm) {

        tipovista.setModel(cbm);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        botonSalir = new javax.swing.JButton();
        tipovista = new javax.swing.JComboBox();
        buscar = new com.kcreativa.pitosycornetas.KTextBox();
        scrollActividades = new javax.swing.JScrollPane();
        jTableAgenda = new com.kcreativa.pitosycornetas.TableIcon();
        jPanel2 = new javax.swing.JPanel();
        lblfecha = new javax.swing.JLabel();
        fecha = new org.jdesktop.swingx.JXDatePicker();
        imprimir = new javax.swing.JButton();
        ledmensajes = new javax.swing.JLabel();
        listamensajes = new javax.swing.JComboBox();
        scrollUtil = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consultorio");
        setResizable(false);

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setLastDividerLocation(300);
        jSplitPane1.setOneTouchExpandable(true);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setBackground(new java.awt.Color(153, 153, 153));
        jToolBar1.setRollover(true);
        jToolBar1.setToolTipText("barra de tareas");
        jToolBar1.setDoubleBuffered(true);

        botonSalir.setText("Salir");
        botonSalir.setFocusable(false);
        botonSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(botonSalir);

        tipovista.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Libreta de conducir", "Carne de salud", "Chequeos" }));
        jToolBar1.add(tipovista);

        buscar.setEditando(true);
        jToolBar1.add(buscar);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        scrollActividades.setViewportView(jTableAgenda);

        jPanel1.add(scrollActividades, java.awt.BorderLayout.CENTER);

        jPanel2.setMinimumSize(new java.awt.Dimension(181, 120));
        jPanel2.setPreferredSize(new java.awt.Dimension(349, 67));

        lblfecha.setText("Fecha");
        jPanel2.add(lblfecha);

        fecha.setDate(new Date());
        jPanel2.add(fecha);

        imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fileprint.png"))); // NOI18N
        imprimir.setToolTipText("Imprimir un estudio");
        jPanel2.add(imprimir);

        ledmensajes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ledgris.gif"))); // NOI18N
        jPanel2.add(ledmensajes);

        listamensajes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Sin mensajes" }));
        listamensajes.setMaximumSize(new java.awt.Dimension(300, 32767));
        jPanel2.add(listamensajes);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jSplitPane1.setLeftComponent(jPanel1);
        jSplitPane1.setRightComponent(scrollUtil);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(697, 560));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    public void AgregarCambioBuscarListener(KeyListener ke) {

        buscar.addKeyListener(ke);
    }

    public void doMaximize() {

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-1024)/2, (screenSize.height-768)/2, 1024, 768);
    }

    public void setAnchoColumna(int idx, int ancho) {

        jTableAgenda.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        TableColumn col = jTableAgenda.getColumnModel().getColumn(idx);
        col.setPreferredWidth(ancho);
    }

    public void colapsarListaEspera() {
       dividerlocation = this.jSplitPane1.getDividerLocation();
       this.jSplitPane1.setDividerLocation(0);
    }

    public void expandirListaEspera() {
       //dividerlocation = this.jSplitPane1.getDividerLocation();
       this.jSplitPane1.setDividerLocation(dividerlocation);
    }

    public Date getFecha() {

        return(fecha.getDate());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonSalir;
    private com.kcreativa.pitosycornetas.KTextBox buscar;
    private org.jdesktop.swingx.JXDatePicker fecha;
    private javax.swing.JButton imprimir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSplitPane jSplitPane1;
    private com.kcreativa.pitosycornetas.TableIcon jTableAgenda;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblfecha;
    private javax.swing.JLabel ledmensajes;
    private javax.swing.JComboBox listamensajes;
    private javax.swing.JScrollPane scrollActividades;
    private javax.swing.JScrollPane scrollUtil;
    private javax.swing.JComboBox tipovista;
    // End of variables declaration//GEN-END:variables

    public void setLed(boolean encendido) {

        if(!encendido)
          this.ledmensajes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ledgris.gif")));
        else
            this.ledmensajes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ledrojo.gif")));
    }

    public void setMensajesModel(DefaultComboBoxModel cbm) {

        listamensajes.setModel(cbm);
    }

    public Integer getMensajeElegido() {

        return(listamensajes.getSelectedIndex()); // -- TODO ver getSelectedObjects()
    }

    public void setMensajesListener(ActionListener mensajesListener) {
        
        listamensajes.addActionListener(mensajesListener);
    }

    public void cambiarColorTablaPacientes(int linea, Color color) {
     
        Object o = jTableAgenda.getModel() .getValueAt(linea, 1);
    }
    
    public void setDividerLocation(int i) {
        
        dividerlocation = i;
        this.jSplitPane1.setDividerLocation(i);
    }

}
