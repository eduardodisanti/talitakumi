/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UIInmediatos.java
 *
 * Created on 08-abr-2011, 16:53:35
 */

package ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import javax.swing.JCheckBox;

/**
 *
 * @author eduardodisanti
 */
public class UIInmediatos extends javax.swing.JDialog {

    private HashMap <Integer, JCheckBox> consultorios;
    private ActionListener consultoriosListener;
    private Integer consultorioelegido;

    /** Creates new form UIInmediatos */
    public UIInmediatos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        consultorios = new HashMap <Integer, JCheckBox>();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Consultorios = new javax.swing.JPanel();

        setTitle("CONSULTORIOS ATT. INMEDIATA");
        setAlwaysOnTop(true);

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Consultorios.setBackground(new java.awt.Color(255, 255, 255));
        Consultorios.setLayout(new javax.swing.BoxLayout(Consultorios, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(Consultorios);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(87, 87, 87)
                        .add(jButton1))
                    .add(layout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 245, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 240, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton1))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-274)/2, (screenSize.height-320)/2, 274, 320);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    public void setConsultoriosListener(ActionListener al) {

        consultoriosListener = al;
    }


    public void cambiarEstadoConsultorio(Integer consultorio, boolean activo) {

        JCheckBox jcb = consultorios.get(consultorio);
        jcb.setSelected(activo);

    }

    public void setPermitirCambiarConsultorios(boolean b) {

        for(JCheckBox j : consultorios.values()) {

            j.setEnabled(b);
        }
    }

    public void agregarConsultorio(String descripcion, Integer id) {

        if(!consultorios.containsKey(id)) {
           JCheckBox jcb = new JCheckBox();

           jcb.setText(descripcion);
           jcb.setOpaque(false);
           jcb.setFont(new java.awt.Font("Helvetica", 1, 13));
           jcb.addActionListener(consultoriosListener);
           jcb.addActionListener(new ConsultorioTypeado());
           jcb.setName(id+"");
           this.Consultorios.add(jcb);
           consultorios.put(id, jcb);
        }
    }

    private class ConsultorioTypeado implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent arg0) {

            JCheckBox jcb = (JCheckBox) arg0.getSource();
            consultorioelegido = Integer.parseInt(jcb.getName());

        }
    }

 public Integer getConsultorioElegido() {

        return(consultorioelegido);
 }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Consultorios;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
