/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UIChequeos.java
 *
 * Created on 14/01/2011, 11:05:10 AM
 */

package talitakumi.medicos.ui;

import com.kcreativa.imgrendering.SwingImageCreator;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.swing.BoxLayout;
import javax.swing.JPanel;

/**
 *
 * @author victoria
 */
public class UIChequeos extends javax.swing.JPanel {

    /** Creates new form UIChequeos */

    UIHistoriaClinicaLaboral hcl;
    public UIChequeos(UICuestionarioMedico cm, UIHistoriaClinicaLaboral hcl, UICuestionarioMedicoSexoFemenino cmsf) {
        initComponents();

        
        UIDictamenFinal df;

        this.hcl = hcl;

        
        agregarAPanel(cm); //Aparecen en el orden en que se agregaron
        if(cmsf!=null)
            this.add(cmsf);
        this.add(hcl);
        //this.add(df);
        
        

        // Para poner en vertical al BoxLayout
        this.setLayout(new BoxLayout(this,BoxLayout.Y_AXIS));
        
        cm.setVisible(true);
        //df.setVisible(true);
        hcl.setVisible(true);
        if(cmsf!=null)
            cmsf.setVisible(true);
        cm.setVisible(true);

    }

    final public void agregarAPanel(JPanel a){
        this.add(a);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setAlignmentX(0.0F);
        setAlignmentY(0.5F);
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
    }// </editor-fold>//GEN-END:initComponents

   public void dispose() {
        //compiled code
        throw new RuntimeException("Compiled Code");
    }

    public BufferedImage getImagenEpisodio() {

        BufferedImage img = null;

        SwingImageCreator sic = new SwingImageCreator();
        img = sic.createImage(this);

        return(img);
    }

    public void setAlemacenarListener(ActionListener al) {
        hcl.setGuardarListener(al);
    }

    public void ocultarBotonAceptar(boolean b) {

        hcl.ocultarBotonAceptar(b);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
